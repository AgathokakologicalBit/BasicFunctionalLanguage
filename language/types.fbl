: include "core.fbl"
: include "tools.fbl"


: ( set "default" [ type ] type void )
: ( set "typeof" [ object ] object "__type" )


: set "__types" void
: run ([ --- ]
    : set "__$setter" set
    : set "__$getter" get

    : ( set "__types" [ action ]
        if (equals action <-)
            ([ name ] __$setter (+ "__$t_" name))
        (if (equals action ->)
            ([ name ] __$getter (+ "__$t_" name))
            (void)
        )
    )
)


: ( set "Type" [ name ] [ describer ]
    : set "__$type_name" name
    : set "__$type_set" set
    : set "__$type_get" get
    : set "__$type_props_count" 0
    : set "__$instances_count" 0

    : set "__$type_add_prop" ( [ name ]
        : __$type_set (+ "__$type_var_" __$type_props_count) name
        : __$type_set (+ "__$type_exs_" name) true
        : __$type_set "__$type_props_count" (+ __$type_props_count 1)
        : __$type_set (+ "__$type_val_" (- __$type_props_count 1)) void
        : __$type_set (+ "__$type_val_" (- __$type_props_count 1))
    )

    : __$type_add_prop <-
    : __$type_add_prop ->
    : describer __$type_add_prop

    ` We should return the type instantiator (object constructor)
    : set "__$type_constructor" ([ constructor ]
        : set "__$instances_count" (+ __$instances_count 1)
        : set "__$object_instance_id" __$instances_count

        : set "__$object_set" set
        : set "__$object_get" get

        : set "__$object_set_u" ( [ name ] run (
            if (equals true (__$type_get (+ "__$type_exs_" name)))
                ([ --- ] __$object_set (+ "__$object_var_" name))
                ([ --- ]
                    : puts "\nERROR: Object of type '" __$type_name "' does not contains a property named '" name "'\n"
                    : void  ` Return no value because of the error
                )
        ))
        : set "__$object_get_u" ( [ name ] run (
            if (equals true (__$type_get (+ "__$type_exs_" name)))
                ([ --- ] __$object_get (+ "__$object_var_" name))
                ([ --- ]
                    : puts "\nERROR: Object of type '" __$type_name "' does not contains a property named '" name "'\n"
                    : void  ` Return no value because of the error
                )
        ))

        : loop __$type_props_count ([ property_index ]
            : __$object_set_u
                (__$type_get (+ "__$type_var_" property_index))
                (__$type_get (+ "__$type_val_" property_index))
        )
        : __$object_set_u (__$type_get (+ "__$type_var_" 0)) __$object_set_u
        : __$object_set_u (__$type_get (+ "__$type_var_" 1)) __$object_get_u
        

        : (([ object ] constructor object : object)
            ([ action ] run (
                if (equals action "__type")
                    ([ --- ] __types -> name)
                    ([ --- ] puts "\nObject '" __$type_name "'. Instance: " __$object_instance_id "\n" : __$object_get_u action)
            ))
        )
    )

    ` Register information about newly created type
    : __types <- name ( [ action ] run (
        if (equals action "name")
            ([ --- ] name)
        (if (equals action "constructor")
            ([ --- ] __$type_constructor)
            void
        )
    ))

    ` Return the constructor
    : __$type_constructor
)
